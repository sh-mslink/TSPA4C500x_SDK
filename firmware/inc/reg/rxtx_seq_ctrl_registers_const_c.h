/////////////////////////////////////////////////////////////////////////////////
// This file has been automatically generated by register_slave.pl version dc9b7d3
/////////////////////////////////////////////////////////////////////////////////

// type declaration
#ifndef __REG_CONST_T
#define __REG_CONST_T

#ifndef REG_CONST_NAME_STRING_MAX_LEN   
#define REG_CONST_NAME_STRING_MAX_LEN 64
#endif // REG_CONST_NAME_STRING_MAX_LEN
#ifndef REG_CONST_DESC_STRING_MAX_LEN
#define REG_CONST_DESC_STRING_MAX_LEN 512
#endif // REG_CONST_DESC_STRING_MAX_LEN
typedef struct {
	char name[REG_CONST_NAME_STRING_MAX_LEN];
	DWORD address;
	DWORD def;
	char desc[REG_CONST_DESC_STRING_MAX_LEN];
} reg_const_t;
typedef struct {
	char name[REG_CONST_NAME_STRING_MAX_LEN];
	char range[32];
	char def[32];
	char access[32];
	char desc[REG_CONST_DESC_STRING_MAX_LEN];
} field_const_t;
typedef struct {
	field_const_t *pfield;
	DWORD size;
} field_const_array_t;
#endif // __REG_CONST_T

#define NUM_REGS__RXTX_SEQ_CTRL_REGISTERS  50
/* { reg_const_rxtx_seq_ctrl_registers, 50, "rxtx_seq_ctrl_registers"},  */ 
static reg_const_t reg_const_rxtx_seq_ctrl_registers[NUM_REGS__RXTX_SEQ_CTRL_REGISTERS] = {
  {/* name */ "mode_ctrl", /* address */ 0x46a04000, /* default */ 0x00000001, /* description */ "Mode control for the RxTx sequencer\n"}, 
  {/* name */ "op_ctrl", /* address */ 0x46a04004, /* default */ 0x0000003c, /* description */ "Operation control for the RxTx Sequencer\n"}, 
  {/* name */ "bypass_0_ctrl", /* address */ 0x46a04010, /* default */ 0x00000000, /* description */ "Bypass control for all RxTx Sequencer Control Outputs\n"}, 
  {/* name */ "bypass_1_ctrl", /* address */ 0x46a04014, /* default */ 0x00000000, /* description */ "Bypass control for all RxTx Sequencer Control Outputs\n"}, 
  {/* name */ "test_bus", /* address */ 0x46a0401c, /* default */ 0x00000000, /* description */ "Test Bus Control and Status\n"}, 
  {/* name */ "cpll_resetb_toggle_ctrl", /* address */ 0x46a04024, /* default */ 0x00000033, /* description */ "Controls the enable and hold length of the cpll_resetb_toggle signal\n"}, 
  {/* name */ "mpll_2p4_resetb_toggle_ctrl", /* address */ 0x46a04028, /* default */ 0x00000033, /* description */ "Controls the enable and hold length of the mpll_2p4_resetb_toggle signal\n"}, 
  {/* name */ "mpll_5p8_resetb_toggle_ctrl", /* address */ 0x46a0402c, /* default */ 0x00000033, /* description */ "Controls the enable and hold length of the mpll_5p8_resetb_toggle signal\n"}, 
  {/* name */ "gp_trigger_toggle_ctrl", /* address */ 0x46a04030, /* default */ 0x00007000, /* description */ "Controls the enable and hold length of the gp_trigger_toggle signal\n"}, 
  {/* name */ "gp_trigger_offset_0_addr", /* address */ 0x46a04034, /* default */ 0x00000000, /* description */ "Controls the gp_trigger_offset to the trigger memory for each state transition\n"}, 
  {/* name */ "gp_trigger_offset_1_addr", /* address */ 0x46a04038, /* default */ 0x00000000, /* description */ "Controls the gp_trigger_offset to the trigger memory for each state transition\n"}, 
  {/* name */ "gp_trigger_offset_2_addr", /* address */ 0x46a0403c, /* default */ 0x00000000, /* description */ "Controls the gp_trigger_offset to the trigger memory for each state transition\n"}, 
  {/* name */ "ada_en_delay_0_ctrl", /* address */ 0x46a04080, /* default */ 0x01015151, /* description */ "Controls the delay for ada_en signal for state transitions\n"}, 
  {/* name */ "agc_en_delay_0_ctrl", /* address */ 0x46a04084, /* default */ 0x01015151, /* description */ "Controls the delay for agc_en signal for state transitions\n"}, 
  {/* name */ "bba_2p4_en_delay_0_ctrl", /* address */ 0x46a04088, /* default */ 0x00000151, /* description */ "Controls the delay for bba_2p4_en for state transitions\n"}, 
  {/* name */ "bba_5p8_en_delay_0_ctrl", /* address */ 0x46a0408c, /* default */ 0x00000154, /* description */ "Controls the delay for bba_5p8_en for state transitions\n"}, 
  {/* name */ "bgr_en_delay_0_ctrl", /* address */ 0x46a04090, /* default */ 0x00000000, /* description */ "Controls the delay for bgr_en signal for state transitions\n"}, 
  {/* name */ "bgr_en_delay_1_ctrl", /* address */ 0x46a04094, /* default */ 0x01010101, /* description */ "Controls the delay for bgr_en signal for state transitions\n"}, 
  {/* name */ "cpll_en_delay_0_ctrl", /* address */ 0x46a04098, /* default */ 0x10100000, /* description */ "Controls the delay for cpll_en signal for state transitions\n"}, 
  {/* name */ "cpll_resetb_toggle_delay_0_ctrl", /* address */ 0x46a0409c, /* default */ 0x00000202, /* description */ "Controls the delay for cpll_resetb_toggle signal for state transitions\n"}, 
  {/* name */ "lna_2p4_en_delay_0_ctrl", /* address */ 0x46a040a8, /* default */ 0x00000222, /* description */ "Controls the delay for lna_2p4_en signal for state transitions\n"}, 
  {/* name */ "lna_5p8_en_delay_0_ctrl", /* address */ 0x46a040ac, /* default */ 0x00000222, /* description */ "Controls the delay for lna_5p8_en signal for state transitions\n"}, 
  {/* name */ "mix_2p4_en_delay_0_ctrl", /* address */ 0x46a040b0, /* default */ 0x00000323, /* description */ "Controls the delay for mix_2p4_en signal for state transitions\n"}, 
  {/* name */ "mix_5p8_en_delay_0_ctrl", /* address */ 0x46a040b4, /* default */ 0x00000323, /* description */ "Controls the delay for mix_5p8_en signal for state transitions\n"}, 
  {/* name */ "mpll_2p4_rx_en_delay_0_ctrl", /* address */ 0x46a040b8, /* default */ 0x00000302, /* description */ "Controls the delay for mpll_2p4_rx_en signal for state transitions\n"}, 
  {/* name */ "mpll_2p4_tx_en_delay_0_ctrl", /* address */ 0x46a040bc, /* default */ 0x00000302, /* description */ "Controls the delay for mpll_2p4_tx_en signal for state transitions\n"}, 
  {/* name */ "mpll_2p4_en_delay_0_ctrl", /* address */ 0x46a040c0, /* default */ 0x03030000, /* description */ "Controls the delay for mpll_2p4_en signal for state transitions\n"}, 
  {/* name */ "mpll_2p4_resetb_toggle_delay_0_ctrl", /* address */ 0x46a040c4, /* default */ 0x00001c1c, /* description */ "Controls the delay for mpll_2p4b_resetb_toggle for all state transitions\n"}, 
  {/* name */ "mpll_5p8_en_delay_0_ctrl", /* address */ 0x46a040c8, /* default */ 0x05050000, /* description */ "Controls the delay for mpll_5p8_en for all state transitions\n"}, 
  {/* name */ "mpll_5p8_resetb_toggle_delay_0_ctrl", /* address */ 0x46a040cc, /* default */ 0x00000a0a, /* description */ "Controls the delay for mpll_5p8_resetb_toggle for all state transitions\n"}, 
  {/* name */ "pa_2p4_en_delay_0_ctrl", /* address */ 0x46a040d0, /* default */ 0x00000278, /* description */ "Controls the delay for pa_2p4_en for all state transitions\n"}, 
  {/* name */ "pa_5p8_en_delay_0_ctrl", /* address */ 0x46a040d4, /* default */ 0x00000212, /* description */ "Controls the delay for pa_5p8_en for all state transitions\n"}, 
  {/* name */ "sdadc_en_delay_0_ctrl", /* address */ 0x46a040d8, /* default */ 0x03031313, /* description */ "Controls the delay for sdadc_en for all state transitions\n"}, 
  {/* name */ "rx_fe_agc_en_delay_0_ctrl", /* address */ 0x46a040dc, /* default */ 0x04041414, /* description */ "Controls the delay for rx_fe_agc_en for all state transitions\n"}, 
  {/* name */ "rx_fe_en_delay_0_ctrl", /* address */ 0x46a040e0, /* default */ 0x04041414, /* description */ "Controls the delay for rx_fe_en for all state transitions\n"}, 
  {/* name */ "tx_fe_en_delay_0_ctrl", /* address */ 0x46a040e4, /* default */ 0x04041414, /* description */ "Controls the delay for tx_fe_en for all state transitions\n"}, 
  {/* name */ "tx_en_gpio_a_delay_0_ctrl", /* address */ 0x46a040e8, /* default */ 0x05051515, /* description */ "Controls the delay for tx_en_gpio_a for all state transitions\n"}, 
  {/* name */ "tx_en_gpio_b_delay_0_ctrl", /* address */ 0x46a040ec, /* default */ 0x05051515, /* description */ "Controls the delay for tx_en_gpio_b for all state transitions\n"}, 
  {/* name */ "rx_en_gpio_delay_0_ctrl", /* address */ 0x46a040f0, /* default */ 0x05051515, /* description */ "Controls the delay for rx_en_gpio for all state transitions\n"}, 
  {/* name */ "gp_trigger_toggle_delay_0_ctrl", /* address */ 0x46a040f4, /* default */ 0x00000000, /* description */ "Controls the delay for gp_trigger_toggle for all state transitions\n"}, 
  {/* name */ "gp_trigger_toggle_delay_1_ctrl", /* address */ 0x46a040f8, /* default */ 0x00000000, /* description */ "Controls the delay for gp_trigger_toggle for all state transitions\n"}, 
  {/* name */ "gp_trigger_toggle_delay_2_ctrl", /* address */ 0x46a040fc, /* default */ 0x00000000, /* description */ "Controls the delay for gp_trigger_toggle for all state transitions\n"}, 
  {/* name */ "use_rf_tx_regs_delay_0_ctrl", /* address */ 0x46a04100, /* default */ 0x01010101, /* description */ "Controls the delay for use_rf_tx_regs for all state transitions\n"}, 
  {/* name */ "mpll_5p8_rx_en_delay_0_ctrl", /* address */ 0x46a04104, /* default */ 0x00000302, /* description */ "Controls the delay for mpll_5p8_rx_en signal for state transitions\n"}, 
  {/* name */ "mpll_5p8_tx_en_delay_0_ctrl", /* address */ 0x46a04108, /* default */ 0x00000302, /* description */ "Controls the delay for mpll_5p8_tx_en signal for state transitions\n"}, 
  {/* name */ "rffe_5p8_en_delay_0_ctrl", /* address */ 0x46a0410c, /* default */ 0x05050404, /* description */ "Controls the delay for rffe_5p8_en for all state transitions\n"}, 
  {/* name */ "test_bus_mega_mux_0_ctrl", /* address */ 0x46a04200, /* default */ 0x00000000, /* description */ "Controls bits 0, 1, 2 and 3 of the test bus\n"}, 
  {/* name */ "test_bus_mega_mux_1_ctrl", /* address */ 0x46a04204, /* default */ 0x00000000, /* description */ "Controls bits 4, 5, 6 and 7 of the test bus\n"}, 
  {/* name */ "test_bus_mega_mux_2_ctrl", /* address */ 0x46a04208, /* default */ 0x00000000, /* description */ "Controls bits 8, 9, 10 and 11 of the test bus\n"}, 
  {/* name */ "current_states", /* address */ 0x46a04240, /* default */ 0x00000000, /* description */ "Current States of the RxTx Sequencer\n"}
};

field_const_t field_const_rxtx_seq_ctrl_registers__mode_ctrl[]  = {
  {/* name */ "enable", /* range */ "[0:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "If this is a 0 the FSM will stay in the RESET state.  Once enabled, the FSM will transition to the IDLE state (requires sync flops)\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:1]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__op_ctrl[]  = {
  {/* name */ "enable_wakeup_arm", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "When set, this enables the wakeup from the PAD operation\n"}, 
  {/* name */ "enable_wakeup_sw", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ "When set, this enables the wakeup from the SW interface registers\n"}, 
  {/* name */ "enable_wakeup_hw", /* range */ "[2:2]", /* default */ "0x1", /* access */ "read-write", /* description */ "When set, this enables the wakeup from the HW sleep timer\n"}, 
  {/* name */ "only_wakeup_signal_from_sleep", /* range */ "[3:3]", /* default */ "0x1", /* access */ "read-write", /* description */ "When set, this will only allow the FSM to transition out of SLEEP from a wakeup request\n"}, 
  {/* name */ "idle_when_rx_no_active_sigs", /* range */ "[4:4]", /* default */ "0x1", /* access */ "read-write", /* description */ "If set, this will force the FSM to transition to the IDLE state instead of stay in the RX state if no RX/TX signals are present\n"}, 
  {/* name */ "idle_when_tx_no_active_sigs", /* range */ "[5:5]", /* default */ "0x1", /* access */ "read-write", /* description */ "If set, this will force the FSM to transition to the IDLE state instead of stay in the TX state if no RX/TX signals are present\n"}, 
  {/* name */ "idle_to_rx_2p4g", /* range */ "[8:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "If set, this will force the FSM to transition from the IDLE state to the RX_2P4G state (SW must force on the gated clock for the RXTX Sequencer prior to using this option)\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[9:9]", /* default */ "0x0", /* access */ "read-write", /* description */ "If set, this will force the FSM to transition from the IDLE state to the RX_5P8G state (SW must force on the gated clock for the RXTX Sequencer prior to using this option)\n"}, 
  {/* name */ "idle_to_tx_2p4g", /* range */ "[10:10]", /* default */ "0x0", /* access */ "read-write", /* description */ "If set, this will force the FSM to transition from the IDLE state to the TX_2P4G state (SW must force on the gated clock for the RXTX Sequencer prior to using this option)\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[11:11]", /* default */ "0x0", /* access */ "read-write", /* description */ "If set, this will force the FSM to transition from the IDLE state to the TX_5P8G state (SW must force on the gated clock for the RXTX Sequencer prior to using this option)\n"}, 
  {/* name */ "dummy_field", /* range */ "[15:12]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__bypass_0_ctrl[]  = {
  {/* name */ "byp_val_ada_en", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for ada_en\n"}, 
  {/* name */ "byp_en_ada_en", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for ada_en\n"}, 
  {/* name */ "byp_val_agc_en", /* range */ "[2:2]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for agc_en\n"}, 
  {/* name */ "byp_en_agc_en", /* range */ "[3:3]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for agc_en\n"}, 
  {/* name */ "byp_val_bba_2p4_en", /* range */ "[4:4]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for bba_2p4_en\n"}, 
  {/* name */ "byp_en_bba_2p4_en", /* range */ "[5:5]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for bba_2p4_en\n"}, 
  {/* name */ "byp_val_bba_5p8_en", /* range */ "[6:6]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for bba_5p8_en\n"}, 
  {/* name */ "byp_en_bba_5p8_en", /* range */ "[7:7]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for bba_5p8_en\n"}, 
  {/* name */ "byp_val_bgr_en", /* range */ "[8:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for bga_en\n"}, 
  {/* name */ "byp_en_bgr_en", /* range */ "[9:9]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for bgr_en\n"}, 
  {/* name */ "byp_val_cpll_en", /* range */ "[10:10]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for cpll_en\n"}, 
  {/* name */ "byp_en_cpll_en", /* range */ "[11:11]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for cpll_en\n"}, 
  {/* name */ "byp_val_cpll_resetb_toggle", /* range */ "[12:12]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for cpll_resetb_toggle\n"}, 
  {/* name */ "byp_en_cpll_resetb_toggle", /* range */ "[13:13]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for cpll_resetb_toggle\n"}, 
  {/* name */ "byp_val_lna_2p4_en", /* range */ "[18:18]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for lna_2p4_en\n"}, 
  {/* name */ "byp_en_lna_2p4_en", /* range */ "[19:19]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for lna_2p4_en\n"}, 
  {/* name */ "byp_val_lna_5p8_en", /* range */ "[20:20]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for lna_5p8_en\n"}, 
  {/* name */ "byp_en_lna_5p8_en", /* range */ "[21:21]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for lna_5p8_en\n"}, 
  {/* name */ "byp_val_mix_2p4_en", /* range */ "[22:22]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mix_2p4_en\n"}, 
  {/* name */ "byp_en_mix_2p4_en", /* range */ "[23:23]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mix_2p4_en\n"}, 
  {/* name */ "byp_val_mix_5p8_en", /* range */ "[24:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mix_5p8_en\n"}, 
  {/* name */ "byp_en_mix_5p8_en", /* range */ "[25:25]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mix_5p8_en\n"}, 
  {/* name */ "byp_val_mpll_2p4_en", /* range */ "[26:26]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mpll_2p4_en\n"}, 
  {/* name */ "byp_en_mpll_2p4_en", /* range */ "[27:27]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mpll_2p4_en\n"}, 
  {/* name */ "byp_val_mpll_2p4_resetb_toggle", /* range */ "[28:28]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mpll_2p4_resetb_toggle\n"}, 
  {/* name */ "byp_en_mpll_2p4_resetb_toggle", /* range */ "[29:29]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mpll_2p4_resetb_toggle\n"}, 
  {/* name */ "byp_val_mpll_5p8_en", /* range */ "[30:30]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mpll_5p8_en\n"}, 
  {/* name */ "byp_en_mpll_5p8_en", /* range */ "[31:31]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mpll_5p8_en\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__bypass_1_ctrl[]  = {
  {/* name */ "byp_val_mpll_5p8_resetb_toggle", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mpll_5p8_resetb_toggle\n"}, 
  {/* name */ "byp_en_mpll_5p8_resetb_toggle", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mpll_5p8_resetb_toggle\n"}, 
  {/* name */ "byp_val_pa_2p4_en", /* range */ "[2:2]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for pa_2p4_en\n"}, 
  {/* name */ "byp_en_pa_2p4_en", /* range */ "[3:3]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for pa_2p4_en\n"}, 
  {/* name */ "byp_val_pa_5p8_en", /* range */ "[4:4]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for pa_5p8_en\n"}, 
  {/* name */ "byp_en_pa_5p8_en", /* range */ "[5:5]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for pa_5p8_en\n"}, 
  {/* name */ "byp_val_sdadc_en", /* range */ "[6:6]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for sdadc_en\n"}, 
  {/* name */ "byp_en_sdadc_en", /* range */ "[7:7]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for sdadc_en\n"}, 
  {/* name */ "byp_val_rx_fe_agc_en", /* range */ "[8:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for rx_fe_agc_en\n"}, 
  {/* name */ "byp_en_rx_fe_agc_en", /* range */ "[9:9]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for rx_fe_agc_en\n"}, 
  {/* name */ "byp_val_rx_fe_en", /* range */ "[10:10]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for rx_fe_en\n"}, 
  {/* name */ "byp_en_rx_fe_en", /* range */ "[11:11]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for rx_fe_en\n"}, 
  {/* name */ "byp_val_tx_fe_en", /* range */ "[12:12]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for tx_fe_en\n"}, 
  {/* name */ "byp_en_tx_fe_en", /* range */ "[13:13]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for tx_fe_en\n"}, 
  {/* name */ "byp_val_use_rf_tx_regs", /* range */ "[14:14]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for use_rf_tx_regs\n"}, 
  {/* name */ "byp_en_use_rf_tx_regs", /* range */ "[15:15]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for use_rf_tx_regs\n"}, 
  {/* name */ "byp_val_mpll_2p4_rx_en", /* range */ "[16:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mpll_2p4_rx_en\n"}, 
  {/* name */ "byp_en_mpll_2p4_rx_en", /* range */ "[17:17]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mpll_2p4_rx_en\n"}, 
  {/* name */ "byp_val_mpll_2p4_tx_en", /* range */ "[18:18]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mpll_2p4_tx_en\n"}, 
  {/* name */ "byp_en_mpll_2p4_tx_en", /* range */ "[19:19]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mpll_2p4_tx_en\n"}, 
  {/* name */ "byp_val_mpll_5p8_rx_en", /* range */ "[20:20]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mpll_5p8_rx_en\n"}, 
  {/* name */ "byp_en_mpll_5p8_rx_en", /* range */ "[21:21]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mpll_5p8_rx_en\n"}, 
  {/* name */ "byp_val_mpll_5p8_tx_en", /* range */ "[22:22]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for mpll_5p8_tx_en\n"}, 
  {/* name */ "byp_en_mpll_5p8_tx_en", /* range */ "[23:23]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for mpll_5p8_tx_en\n"}, 
  {/* name */ "byp_val_rffe_5p8_en", /* range */ "[24:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass value for rffe_5p8_en\n"}, 
  {/* name */ "byp_en_rffe_5p8_en", /* range */ "[25:25]", /* default */ "0x0", /* access */ "read-write", /* description */ "Bypass enable for rffe_5p8_en\n"}, 
  {/* name */ "dummy_field", /* range */ "[31:26]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__test_bus[]  = {
  {/* name */ "status", /* range */ "[11:0]", /* default */ "0x0", /* access */ "read-only", /* description */ "Current status of the test bus\n"}, 
  {/* name */ "dummy_field", /* range */ "[15:12]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__cpll_resetb_toggle_ctrl[]  = {
  {/* name */ "enable_idle_to_rx_2p4g", /* range */ "[0:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enables the cpll_resetb_toggle operation on the transition from IDLE to RX_2P4G\n"}, 
  {/* name */ "enable_idle_to_rx_5p8g", /* range */ "[1:1]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enables the cpll_resetb_toggle operation on the transition from IDLE to RX_5P8G\n"}, 
  {/* name */ "hold", /* range */ "[6:4]", /* default */ "0x3", /* access */ "read-write", /* description */ "Number of clock cycles to hold cpll_resetb_toggle\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:7]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_2p4_resetb_toggle_ctrl[]  = {
  {/* name */ "enable_idle_to_rx_2p4g", /* range */ "[0:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enables the mpll_2p4_resetb_toggle operation on the transition from IDLE to RX_2P4G\n"}, 
  {/* name */ "enable_idle_to_tx_2p4g", /* range */ "[1:1]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enables the mpll_2p4_resetb_toggle operation on the transition from IDLE to TX_2P4G\n"}, 
  {/* name */ "hold", /* range */ "[6:4]", /* default */ "0x3", /* access */ "read-write", /* description */ "Number of clock cycles to hold mpll_2p4_resetb_toggle\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:7]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_5p8_resetb_toggle_ctrl[]  = {
  {/* name */ "enable_idle_to_rx_5p8g", /* range */ "[0:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enables the mpll_5p8_resetb_toggle operation on the transition from IDLE to RX_5P8G\n"}, 
  {/* name */ "enable_idle_to_tx_5p8g", /* range */ "[1:1]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enables the mpll_5p8_resetb_toggle operation on the transition from IDLE to TX_5P8G\n"}, 
  {/* name */ "hold", /* range */ "[6:4]", /* default */ "0x3", /* access */ "read-write", /* description */ "Number of clock cycles to hold mpll_5p8_resetb_toggle\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:7]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__gp_trigger_toggle_ctrl[]  = {
  {/* name */ "enable_sleep_to_idle", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from SLEEP to IDLE\n"}, 
  {/* name */ "enable_idle_to_sleep", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from IDLE to SLEEP\n"}, 
  {/* name */ "enable_idle_to_rx_2p4g", /* range */ "[2:2]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from IDLE to RX_2P4G\n"}, 
  {/* name */ "enable_idle_to_rx_5p8g", /* range */ "[3:3]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from IDLE to RX_5P8G\n"}, 
  {/* name */ "enable_idle_to_tx_2p4g", /* range */ "[4:4]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from IDLE to TX_2P4G\n"}, 
  {/* name */ "enable_idle_to_tx_5p8g", /* range */ "[5:5]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from IDLE to TX_5P8G\n"}, 
  {/* name */ "enable_rx_2p4g_to_idle", /* range */ "[6:6]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from RX_2P4G to IDLE\n"}, 
  {/* name */ "enable_rx_5p8g_to_idle", /* range */ "[7:7]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from RX_5P8G to IDLE\n"}, 
  {/* name */ "enable_tx_2p4g_to_idle", /* range */ "[8:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from TX_2P4G to IDLE\n"}, 
  {/* name */ "enable_tx_5p8g_to_idle", /* range */ "[9:9]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enables the gp_trigger_toggle operation on the transition from TX_5P8G to IDLE\n"}, 
  {/* name */ "hold", /* range */ "[14:12]", /* default */ "0x7", /* access */ "read-write", /* description */ "Number of clock cycles to hold gp_trigger_toggle\n"}, 
  {/* name */ "dummy_field", /* range */ "[15:15]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__gp_trigger_offset_0_addr[]  = {
  {/* name */ "sleep_to_idle", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from SLEEP to IDLE\n"}, 
  {/* name */ "idle_to_sleep", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from IDLE to SLEEP\n"}, 
  {/* name */ "idle_to_rx_2p4g", /* range */ "[23:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[31:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from IDLE to RX_5P8G\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__gp_trigger_offset_1_addr[]  = {
  {/* name */ "idle_to_tx_2p4g", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from IDLE to TX_2P4G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from IDLE to TX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__gp_trigger_offset_2_addr[]  = {
  {/* name */ "tx_2p4g_to_idle", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from TX_2P4G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "The gp_trigger_offset for the transition from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__ada_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x51", /* access */ "read-write", /* description */ "Delay for asserting ada_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x51", /* access */ "read-write", /* description */ "Delay for asserting ada_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting ada_en value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting ada_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__agc_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x51", /* access */ "read-write", /* description */ "Delay for asserting agc_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x51", /* access */ "read-write", /* description */ "Delay for asserting agc_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting agc_en value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting agc_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__bba_2p4_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x51", /* access */ "read-write", /* description */ "Delay for asserting bba_2p4_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[15:8]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting bba_2p4_en value when going from RX_2P4G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__bba_5p8_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_5p8g", /* range */ "[7:0]", /* default */ "0x54", /* access */ "read-write", /* description */ "Delay for asserting bba_5p8_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting bba_5p8_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__bgr_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting bgr_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting bgr_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "idle_to_tx_2p4g", /* range */ "[23:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting bgr_en value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[31:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting bgr_en value when going from IDLE to TX_5P8G\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__bgr_en_delay_1_ctrl[]  = {
  {/* name */ "rx_2p4g_to_idle", /* range */ "[7:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting bgr_en value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting bgr_en value when going from RX_5P8G to IDLE\n"}, 
  {/* name */ "tx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting bgr_en value when going from TX_2P4G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting bgr_en value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__cpll_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting cpll_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting cpll_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x10", /* access */ "read-write", /* description */ "Delay for asserting cpll_en value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x10", /* access */ "read-write", /* description */ "Delay for asserting cpll_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__cpll_resetb_toggle_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting cpll_resetb_toggle value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting cpll_resetb_toggle value when going from IDLE to RX_5P8G\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__lna_2p4_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x22", /* access */ "read-write", /* description */ "Delay for asserting lna_2p4_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[15:8]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting lna_2p4_en value when going from RX_2P4G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__lna_5p8_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_5p8g", /* range */ "[7:0]", /* default */ "0x22", /* access */ "read-write", /* description */ "Delay for asserting lna_5p8_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting lna_5p8_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mix_2p4_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x23", /* access */ "read-write", /* description */ "Delay for asserting mix_2p4_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[15:8]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting mix_2p4_en value when going from RX_2P4G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mix_5p8_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_5p8g", /* range */ "[7:0]", /* default */ "0x23", /* access */ "read-write", /* description */ "Delay for asserting mix_5p8_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting mix_5p8_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_2p4_rx_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_rx_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[15:8]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_rx_en value when going from RX_2P4G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_2p4_tx_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_tx_2p4g", /* range */ "[7:0]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_tx_en value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "tx_2p4g_to_idle", /* range */ "[15:8]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_tx_en value when going from TX_2P4G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_2p4_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_tx_2p4g", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_en value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_en value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "tx_2p4g_to_idle", /* range */ "[31:24]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_en value when going from TX_2P4G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_2p4_resetb_toggle_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x1c", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_resetb_toggle value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_tx_2p4g", /* range */ "[15:8]", /* default */ "0x1c", /* access */ "read-write", /* description */ "Delay for asserting mpll_2p4_resetb_toggle value when going from IDLE to TX_2P4G\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_5p8_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_5p8g", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_en value when going from IDLE to TX_5P8G\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[23:16]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_en value when going from RX_5P8G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_en value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_5p8_resetb_toggle_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_5p8g", /* range */ "[7:0]", /* default */ "0xa", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_resetb_toggle value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0xa", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_resetb_toggle value when going from IDLE to TX_5P8G\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__pa_2p4_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_tx_2p4g", /* range */ "[7:0]", /* default */ "0x78", /* access */ "read-write", /* description */ "Delay for asserting pa_2p4_en value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "tx_2p4g_to_idle", /* range */ "[15:8]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting pa_2p4_en value when going from TX_2P4G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__pa_5p8_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_tx_5p8g", /* range */ "[7:0]", /* default */ "0x12", /* access */ "read-write", /* description */ "Delay for asserting pa_5p8_en value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting pa_5p8_en value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__sdadc_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x13", /* access */ "read-write", /* description */ "Delay for asserting sdadc_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x13", /* access */ "read-write", /* description */ "Delay for asserting sdadc_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting sdadc_en value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting sdadc_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__rx_fe_agc_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x14", /* access */ "read-write", /* description */ "Delay for asserting rx_fe_agc_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x14", /* access */ "read-write", /* description */ "Delay for asserting rx_fe_agc_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x4", /* access */ "read-write", /* description */ "Delay for asserting rx_fe_agc_en value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x4", /* access */ "read-write", /* description */ "Delay for asserting rx_fe_agc_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__rx_fe_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x14", /* access */ "read-write", /* description */ "Delay for asserting rx_fe_en value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x14", /* access */ "read-write", /* description */ "Delay for asserting rx_fe_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x4", /* access */ "read-write", /* description */ "Delay for asserting rx_fe_en value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x4", /* access */ "read-write", /* description */ "Delay for asserting rx_fe_en value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__tx_fe_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_tx_2p4g", /* range */ "[7:0]", /* default */ "0x14", /* access */ "read-write", /* description */ "Delay for asserting tx_fe_en value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0x14", /* access */ "read-write", /* description */ "Delay for asserting tx_fe_en value when going from IDLE to TX_5P8G\n"}, 
  {/* name */ "tx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x4", /* access */ "read-write", /* description */ "Delay for asserting tx_fe_en value when going from TX_2P4G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x4", /* access */ "read-write", /* description */ "Delay for asserting tx_fe_en value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__tx_en_gpio_a_delay_0_ctrl[]  = {
  {/* name */ "idle_to_tx_2p4g", /* range */ "[7:0]", /* default */ "0x15", /* access */ "read-write", /* description */ "Delay for asserting tx_en_gpio_a value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0x15", /* access */ "read-write", /* description */ "Delay for asserting tx_en_gpio_a value when going from IDLE to TX_5P8G\n"}, 
  {/* name */ "tx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting tx_en_gpio_a value when going from TX_2P4G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting tx_en_gpio_a value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__tx_en_gpio_b_delay_0_ctrl[]  = {
  {/* name */ "idle_to_tx_2p4g", /* range */ "[7:0]", /* default */ "0x15", /* access */ "read-write", /* description */ "Delay for asserting tx_en_gpio_b value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0x15", /* access */ "read-write", /* description */ "Delay for asserting tx_en_gpio_b value when going from IDLE to TX_5P8G\n"}, 
  {/* name */ "tx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting tx_en_gpio_b value when going from TX_2P4G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting tx_en_gpio_b value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__rx_en_gpio_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_2p4g", /* range */ "[7:0]", /* default */ "0x15", /* access */ "read-write", /* description */ "Delay for asserting rx_en_gpio value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[15:8]", /* default */ "0x15", /* access */ "read-write", /* description */ "Delay for asserting rx_en_gpio value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting rx_en_gpio value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting rx_en_gpio value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__gp_trigger_toggle_delay_0_ctrl[]  = {
  {/* name */ "sleep_to_idle", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from SLEEP to IDLE\n"}, 
  {/* name */ "idle_to_sleep", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from IDLE to SLEEP\n"}, 
  {/* name */ "idle_to_rx_2p4g", /* range */ "[23:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from IDLE to RX_2P4G\n"}, 
  {/* name */ "idle_to_rx_5p8g", /* range */ "[31:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from IDLE to RX_5P8G\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__gp_trigger_toggle_delay_1_ctrl[]  = {
  {/* name */ "idle_to_tx_2p4g", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from IDLE to TX_5P8G\n"}, 
  {/* name */ "rx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from RX_2P4G to IDLE\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from RX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__gp_trigger_toggle_delay_2_ctrl[]  = {
  {/* name */ "tx_2p4g_to_idle", /* range */ "[7:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from TX_2P4G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Delay for asserting gp_trigger_toggle value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__use_rf_tx_regs_delay_0_ctrl[]  = {
  {/* name */ "idle_to_tx_2p4g", /* range */ "[7:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting use_rf_tx_regs value when going from IDLE to TX_2P4G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting use_rf_tx_regs value when going from IDLE to TX_5P8G\n"}, 
  {/* name */ "tx_2p4g_to_idle", /* range */ "[23:16]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting use_rf_tx_regs value when going from TX_2P4G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x1", /* access */ "read-write", /* description */ "Delay for asserting use_rf_tx_regs value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_5p8_rx_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_5p8g", /* range */ "[7:0]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_rx_en value when going from IDLE to RX_5p8G\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_rx_en value when going from RX_5p8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__mpll_5p8_tx_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_tx_5p8g", /* range */ "[7:0]", /* default */ "0x2", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_tx_en value when going from IDLE to TX_5p8G\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[15:8]", /* default */ "0x3", /* access */ "read-write", /* description */ "Delay for asserting mpll_5p8_tx_en value when going from TX_5p8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__rffe_5p8_en_delay_0_ctrl[]  = {
  {/* name */ "idle_to_rx_5p8g", /* range */ "[7:0]", /* default */ "0x4", /* access */ "read-write", /* description */ "Delay for asserting rffe_5p8_en value when going from IDLE to RX_5P8G\n"}, 
  {/* name */ "idle_to_tx_5p8g", /* range */ "[15:8]", /* default */ "0x4", /* access */ "read-write", /* description */ "Delay for asserting rffe_5p8_en value when going from IDLE to TX_5P8G\n"}, 
  {/* name */ "rx_5p8g_to_idle", /* range */ "[23:16]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting rffe_5p8_en value when going from RX_5P8G to IDLE\n"}, 
  {/* name */ "tx_5p8g_to_idle", /* range */ "[31:24]", /* default */ "0x5", /* access */ "read-write", /* description */ "Delay for asserting rffe_5p8_en value when going from TX_5P8G to IDLE\n"}
};
field_const_t field_const_rxtx_seq_ctrl_registers__test_bus_mega_mux_0_ctrl[]  = {
  {/* name */ "bit_0", /* range */ "[5:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 0 of the test bus\n"}, 
  {/* name */ "bit_1", /* range */ "[13:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 1 of the test bus\n"}, 
  {/* name */ "bit_2", /* range */ "[21:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 2 of the test bus\n"}, 
  {/* name */ "bit_3", /* range */ "[29:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 3 of the test bus\n"}, 
  {/* name */ "dummy_field", /* range */ "[31:30]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__test_bus_mega_mux_1_ctrl[]  = {
  {/* name */ "bit_4", /* range */ "[5:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 4 of the test bus\n"}, 
  {/* name */ "bit_5", /* range */ "[13:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 5 of the test bus\n"}, 
  {/* name */ "bit_6", /* range */ "[21:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 6 of the test bus\n"}, 
  {/* name */ "bit_7", /* range */ "[29:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 7 of the test bus\n"}, 
  {/* name */ "dummy_field", /* range */ "[31:30]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__test_bus_mega_mux_2_ctrl[]  = {
  {/* name */ "bit_8", /* range */ "[5:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 8 of the test bus\n"}, 
  {/* name */ "bit_9", /* range */ "[13:8]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 9 of the test bus\n"}, 
  {/* name */ "bit_10", /* range */ "[21:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 10 of the test bus\n"}, 
  {/* name */ "bit_11", /* range */ "[29:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "Controls bit 11 of the test bus\n"}, 
  {/* name */ "dummy_field", /* range */ "[31:30]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_rxtx_seq_ctrl_registers__current_states[]  = {
  {/* name */ "rxtx_seq_state", /* range */ "[4:0]", /* default */ "0x0", /* access */ "read-only", /* description */ "rxtx_seq_state_sts\nSLEEP           = 1\nIDLE            = 2\nRX_2P4G         = 3\nRX_5P8G         = 4\nTX_2P4G         = 5\nTX_5P8G         = 6\nSLEEP_TO_IDLE   = 7\nIDLE_TO_SLEEP   = 8\nIDLE_TO_RX_2P4G = 9\nIDLE_TO_RX_5P8G = 10\nIDLE_TO_TX_2P4G = 11\nIDLE_TO_TX_5P8G = 12\nRX_2P4G_TO_IDLE = 13\nRX_5P8G_TO_IDLE = 14\nTX_2P4G_TO_IDLE = 15\nTX_5P8G_TO_IDLE = 16\nRESET_TO_IDLE   = 17\nANY_TO_RESET    = 18\nRESET           = 0\n\n"}, 
  {/* name */ "last_rxtx_seq_state", /* range */ "[12:8]", /* default */ "0x0", /* access */ "read-only", /* description */ "last_rxtx_seq_state_sts\nSLEEP           = 1\nIDLE            = 2\nRX_2P4G         = 3\nRX_5P8G         = 4\nTX_2P4G         = 5\nTX_5P8G         = 6\nSLEEP_TO_IDLE   = 7\nIDLE_TO_SLEEP   = 8\nIDLE_TO_RX_2P4G = 9\nIDLE_TO_RX_5P8G = 10\nIDLE_TO_TX_2P4G = 11\nIDLE_TO_TX_5P8G = 12\nRX_2P4G_TO_IDLE = 13\nRX_5P8G_TO_IDLE = 14\nTX_2P4G_TO_IDLE = 15\nTX_5P8G_TO_IDLE = 16\nRESET_TO_IDLE   = 17\nANY_TO_RESET    = 18\nRESET           = 0\n\n"}, 
  {/* name */ "dummy_field", /* range */ "[15:13]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};

field_const_array_t reg_pnt_list__rxtx_seq_ctrl_registers[NUM_REGS__RXTX_SEQ_CTRL_REGISTERS] = {
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mode_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__op_ctrl, /* size */ 11}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__bypass_0_ctrl, /* size */ 28}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__bypass_1_ctrl, /* size */ 27}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__test_bus, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__cpll_resetb_toggle_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_2p4_resetb_toggle_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_5p8_resetb_toggle_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__gp_trigger_toggle_ctrl, /* size */ 12}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__gp_trigger_offset_0_addr, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__gp_trigger_offset_1_addr, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__gp_trigger_offset_2_addr, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__ada_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__agc_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__bba_2p4_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__bba_5p8_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__bgr_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__bgr_en_delay_1_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__cpll_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__cpll_resetb_toggle_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__lna_2p4_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__lna_5p8_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mix_2p4_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mix_5p8_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_2p4_rx_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_2p4_tx_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_2p4_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_2p4_resetb_toggle_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_5p8_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_5p8_resetb_toggle_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__pa_2p4_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__pa_5p8_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__sdadc_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__rx_fe_agc_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__rx_fe_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__tx_fe_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__tx_en_gpio_a_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__tx_en_gpio_b_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__rx_en_gpio_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__gp_trigger_toggle_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__gp_trigger_toggle_delay_1_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__gp_trigger_toggle_delay_2_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__use_rf_tx_regs_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_5p8_rx_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__mpll_5p8_tx_en_delay_0_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__rffe_5p8_en_delay_0_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__test_bus_mega_mux_0_ctrl, /* size */ 5}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__test_bus_mega_mux_1_ctrl, /* size */ 5}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__test_bus_mega_mux_2_ctrl, /* size */ 5}, 
  { /* pfield */ field_const_rxtx_seq_ctrl_registers__current_states, /* size */ 3}
};
