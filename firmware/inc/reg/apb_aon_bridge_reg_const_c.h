/////////////////////////////////////////////////////////////////////////////////
// This file has been automatically generated by register_slave.pl version 08aeff9
/////////////////////////////////////////////////////////////////////////////////

// type declaration
#ifndef __REG_CONST_T
#define __REG_CONST_T

#ifndef REG_CONST_NAME_STRING_MAX_LEN   
#define REG_CONST_NAME_STRING_MAX_LEN 64
#endif // REG_CONST_NAME_STRING_MAX_LEN
#ifndef REG_CONST_DESC_STRING_MAX_LEN
#define REG_CONST_DESC_STRING_MAX_LEN 512
#endif // REG_CONST_DESC_STRING_MAX_LEN
typedef struct {
	char name[REG_CONST_NAME_STRING_MAX_LEN];
	DWORD address;
	DWORD def;
	char desc[REG_CONST_DESC_STRING_MAX_LEN];
} reg_const_t;
typedef struct {
	char name[REG_CONST_NAME_STRING_MAX_LEN];
	char range[32];
	char def[32];
	char access[32];
	char desc[REG_CONST_DESC_STRING_MAX_LEN];
} field_const_t;
typedef struct {
	field_const_t *pfield;
	DWORD size;
} field_const_array_t;
#endif // __REG_CONST_T

#define NUM_REGS__APB_AON_BRIDGE_REG  4
/* { reg_const_apb_aon_bridge_reg, 4, "apb_aon_bridge_reg"},  */ 
static reg_const_t reg_const_apb_aon_bridge_reg[NUM_REGS__APB_AON_BRIDGE_REG] = {
  {/* name */ "op_ctrl", /* address */ 0x44111008, /* default */ 0x00000000, /* description */ ""}, 
  {/* name */ "wdata", /* address */ 0x4411100c, /* default */ 0x00000000, /* description */ ""}, 
  {/* name */ "rdata", /* address */ 0x44111010, /* default */ 0x00000000, /* description */ ""}, 
  {/* name */ "status", /* address */ 0x44111018, /* default */ 0x00000000, /* description */ ""}
};

field_const_t field_const_apb_aon_bridge_reg__op_ctrl[]  = {
  {/* name */ "ctl_aon_reg_addr", /* range */ "[15:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Register address of AON\n"}, 
  {/* name */ "ctl_aon_reg_rd0wr1", /* range */ "[16:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "0 - read, 1 - write\n"}, 
  {/* name */ "sts_aon_reg_rw_done", /* range */ "[20:20]", /* default */ "0x0", /* access */ "read-only", /* description */ "Previous operation done. Read will clear the register\n"}, 
  {/* name */ "dummy_field", /* range */ "[23:21]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_apb_aon_bridge_reg__wdata[]  = {
  {/* name */ "ctl_aon_reg_wdata", /* range */ "[31:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Write data to the register (programed before programming write op_type)\n"}
};
field_const_t field_const_apb_aon_bridge_reg__rdata[]  = {
  {/* name */ "sts_aon_reg_rdata", /* range */ "[31:0]", /* default */ "0x0", /* access */ "read-only", /* description */ "Read data to the register (programed before programming write op_type)\n"}
};
field_const_t field_const_apb_aon_bridge_reg__status[]  = {
  {/* name */ "sts_aon_bridge_status", /* range */ "[2:0]", /* default */ "0x0", /* access */ "read-only", /* description */ "Read data to the register (programed before programming write op_type)\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:3]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};

field_const_array_t reg_pnt_list__apb_aon_bridge_reg[NUM_REGS__APB_AON_BRIDGE_REG] = {
  { /* pfield */ field_const_apb_aon_bridge_reg__op_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_apb_aon_bridge_reg__wdata, /* size */ 1}, 
  { /* pfield */ field_const_apb_aon_bridge_reg__rdata, /* size */ 1}, 
  { /* pfield */ field_const_apb_aon_bridge_reg__status, /* size */ 2}
};
