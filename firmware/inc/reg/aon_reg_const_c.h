/////////////////////////////////////////////////////////////////////////////////
// This file has been automatically generated by register_slave.pl version dc9b7d3
/////////////////////////////////////////////////////////////////////////////////

// type declaration
#ifndef __REG_CONST_T
#define __REG_CONST_T

#ifndef REG_CONST_NAME_STRING_MAX_LEN   
#define REG_CONST_NAME_STRING_MAX_LEN 64
#endif // REG_CONST_NAME_STRING_MAX_LEN
#ifndef REG_CONST_DESC_STRING_MAX_LEN
#define REG_CONST_DESC_STRING_MAX_LEN 512
#endif // REG_CONST_DESC_STRING_MAX_LEN
typedef struct {
	char name[REG_CONST_NAME_STRING_MAX_LEN];
	DWORD address;
	DWORD def;
	char desc[REG_CONST_DESC_STRING_MAX_LEN];
} reg_const_t;
typedef struct {
	char name[REG_CONST_NAME_STRING_MAX_LEN];
	char range[32];
	char def[32];
	char access[32];
	char desc[REG_CONST_DESC_STRING_MAX_LEN];
} field_const_t;
typedef struct {
	field_const_t *pfield;
	DWORD size;
} field_const_array_t;
#endif // __REG_CONST_T

#define NUM_REGS__AON_REG  41
/* { reg_const_aon_reg, 41, "aon_reg"},  */ 
static reg_const_t reg_const_aon_reg[NUM_REGS__AON_REG] = {
  {/* name */ "pmu_aonpd_reg_1to4", /* address */ 0x00001080, /* default */ 0x0040247e, /* description */ "PMU register aonpd_reg 1:4\n"}, 
  {/* name */ "pmu_aonpd_reg_1to4_lv", /* address */ 0x00001084, /* default */ 0x0040247e, /* description */ "PMU register aonpd_reg 1:4 in low voltage mode\n"}, 
  {/* name */ "pmu_aonpd_reg_5to6", /* address */ 0x00001088, /* default */ 0x0000063f, /* description */ "PMU register aonpd_reg 5 to 6\n"}, 
  {/* name */ "pmu_doopd_reg_1to4", /* address */ 0x00001090, /* default */ 0x55484051, /* description */ "PMU register doopd_reg 1:4\n"}, 
  {/* name */ "pmu_doopd_reg_567", /* address */ 0x00001094, /* default */ 0x001f108c, /* description */ "PMU register doopd_reg 5 to 6\n"}, 
  {/* name */ "pmu_test_mux_ctrl", /* address */ 0x000010a0, /* default */ 0x00000000, /* description */ "PMU test mux control\n"}, 
  {/* name */ "pmu_misc_ctrl", /* address */ 0x000010c0, /* default */ 0x00000040, /* description */ "PMU misc control\n"}, 
  {/* name */ "aon_timer0_ctrl", /* address */ 0x00001100, /* default */ 0x00000000, /* description */ "timer0 control\n"}, 
  {/* name */ "aon_timer0_init_val", /* address */ 0x00001104, /* default */ 0x00000000, /* description */ "timer0 initial value\n"}, 
  {/* name */ "aon_timer1_ctrl", /* address */ 0x00001120, /* default */ 0x00000000, /* description */ "timer1 control\n"}, 
  {/* name */ "aon_timer1_init_val", /* address */ 0x00001124, /* default */ 0x00000000, /* description */ "timer1 initial value\n"}, 
  {/* name */ "aon_timer_wake_up_sel", /* address */ 0x00001134, /* default */ 0x00000000, /* description */ "timer1 reload value\n"}, 
  {/* name */ "doopd_reg1_mux_control", /* address */ 0x00001150, /* default */ 0x00000000, /* description */ "DOOPD reg 1 mux control\n"}, 
  {/* name */ "gpio_wakeup_mask", /* address */ 0x00001168, /* default */ 0x00000000, /* description */ "GPIO wakeup mask\n"}, 
  {/* name */ "gpio_wakeup_polarity", /* address */ 0x00001170, /* default */ 0x00000000, /* description */ "GPIO wakeup polarity\n"}, 
  {/* name */ "ms_gpio_wakeup_mask", /* address */ 0x00001178, /* default */ 0x00000000, /* description */ "Mixed signal GPIO wakeup mask\n"}, 
  {/* name */ "ms_gpio_wakeup_polarity", /* address */ 0x0000117c, /* default */ 0x00000000, /* description */ "Mixed signal GPIO wakeup polarity\n"}, 
  {/* name */ "cpu_stack_pointer", /* address */ 0x000011a0, /* default */ 0x00000000, /* description */ "CPU stack pointer value\n"}, 
  {/* name */ "cpu_program_counter_cold_boot", /* address */ 0x000011a4, /* default */ 0x00000000, /* description */ "CPU program counter value\n"}, 
  {/* name */ "spare_ctrl_reg0", /* address */ 0x000011b0, /* default */ 0x00000000, /* description */ "Spare control register (for CPU use) 0\n"}, 
  {/* name */ "spare_ctrl_reg1", /* address */ 0x000011b4, /* default */ 0x00000000, /* description */ "Spare control register (for CPU use) 1\n"}, 
  {/* name */ "gpio_0_le_maskb", /* address */ 0x000011c0, /* default */ 0x00000000, /* description */ "LE/maskb control for GPIO_0\n"}, 
  {/* name */ "gpio_1_le_maskb", /* address */ 0x000011c4, /* default */ 0x00000000, /* description */ "LE/maskb control for GPIO_1\n"}, 
  {/* name */ "gpio_2_le_maskb", /* address */ 0x000011c8, /* default */ 0x00000000, /* description */ "LE/maskb control for GPIO_2\n"}, 
  {/* name */ "gpio_3_le_maskb", /* address */ 0x000011d0, /* default */ 0x00000000, /* description */ "LE/maskb control for GPIO_3\n"}, 
  {/* name */ "gpio_4_le_maskb", /* address */ 0x000011d4, /* default */ 0x00000000, /* description */ "LE/maskb control for GPIO_4\n"}, 
  {/* name */ "gpio_01_aon_sel", /* address */ 0x00001200, /* default */ 0x00000000, /* description */ "AON dout selection for GPIO 0/1\n"}, 
  {/* name */ "gpio_34_aon_sel", /* address */ 0x00001204, /* default */ 0x00000000, /* description */ "AON dout selection for GPIO 3/4\n"}, 
  {/* name */ "gpio_2_ana_on", /* address */ 0x00001220, /* default */ 0x00000000, /* description */ "GPIO 2 analog on control\n"}, 
  {/* name */ "qspi_aon_sel", /* address */ 0x00001228, /* default */ 0x00000000, /* description */ "AON dout selection for QSPI\n"}, 
  {/* name */ "qspi_le_maskb", /* address */ 0x0000122c, /* default */ 0x00000000, /* description */ "LE/maskb control for qspi\n"}, 
  {/* name */ "xo_reg_resetn", /* address */ 0x00001240, /* default */ 0x22251f33, /* description */ "XO Registers during PD_DOO reset\n"}, 
  {/* name */ "xo_reg5_resetn", /* address */ 0x00001244, /* default */ 0x00000008, /* description */ "XO Registers during PD_DOO reset\n"}, 
  {/* name */ "xo_reg", /* address */ 0x00001250, /* default */ 0x22251f33, /* description */ "XO Registers after PD_DOO reset\n"}, 
  {/* name */ "xo_reg5", /* address */ 0x00001254, /* default */ 0x00000008, /* description */ "XO Registers after PD_DOO reset\n"}, 
  {/* name */ "aon_misc_ctrl", /* address */ 0x00001288, /* default */ 0x00000010, /* description */ "Misc Control for AON Domain\n"}, 
  {/* name */ "aon_reset_ctrl", /* address */ 0x0000128c, /* default */ 0x00000001, /* description */ "Aon reset control register. Toggle 1-0-1 to reset a design block.\n"}, 
  {/* name */ "aon_global_reset_ctrl", /* address */ 0x00001290, /* default */ 0x00000001, /* description */ "Global Reset (SW reset) - resets the whole chip, including this register.\n"}, 
  {/* name */ "aon_clk_ctrl", /* address */ 0x000012a0, /* default */ 0x00000003, /* description */ "sleep timer control control\n"}, 
  {/* name */ "sensor_flash_power_sw_ctl", /* address */ 0x000012b0, /* default */ 0x00000000, /* description */ "Power switch control for Sensor/Flash \n"}, 
  {/* name */ "pd12_isolation_control", /* address */ 0x000012c0, /* default */ 0x00000003, /* description */ "PD1/2 interface isolation control\n"}
};

field_const_t field_const_aon_reg__pmu_aonpd_reg_1to4[]  = {
  {/* name */ "reg1", /* range */ "[7:0]", /* default */ "0x7e", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg2", /* range */ "[15:8]", /* default */ "0x24", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg3", /* range */ "[23:16]", /* default */ "0x40", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg4", /* range */ "[31:24]", /* default */ "0x00", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__pmu_aonpd_reg_1to4_lv[]  = {
  {/* name */ "reg1", /* range */ "[7:0]", /* default */ "0x7e", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg2", /* range */ "[15:8]", /* default */ "0x24", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg3", /* range */ "[23:16]", /* default */ "0x40", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg4", /* range */ "[31:24]", /* default */ "0x00", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__pmu_aonpd_reg_5to6[]  = {
  {/* name */ "reg5", /* range */ "[7:0]", /* default */ "0x3f", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg6", /* range */ "[15:8]", /* default */ "0x06", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__pmu_doopd_reg_1to4[]  = {
  {/* name */ "reg1", /* range */ "[7:0]", /* default */ "0x51", /* access */ "read-write", /* description */ "this register value will be used to overwrite trigger memory values\n"}, 
  {/* name */ "reg2", /* range */ "[15:8]", /* default */ "0x40", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg3", /* range */ "[23:16]", /* default */ "0x48", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg4", /* range */ "[31:24]", /* default */ "0x55", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__pmu_doopd_reg_567[]  = {
  {/* name */ "reg5", /* range */ "[7:0]", /* default */ "0x8c", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg6", /* range */ "[15:8]", /* default */ "0x10", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg7", /* range */ "[23:16]", /* default */ "0x1f", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__pmu_test_mux_ctrl[]  = {
  {/* name */ "block", /* range */ "[3:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "node", /* range */ "[7:4]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__pmu_misc_ctrl[]  = {
  {/* name */ "ctl_temp_sens_en", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_vbat_sens_en", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_clk_32k_rtc_en", /* range */ "[4:4]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enable 32k RTC clock\n"}, 
  {/* name */ "ctl_clk_xo_for_dcdc_en", /* range */ "[5:5]", /* default */ "0x0", /* access */ "read-write", /* description */ "Enable XO clock for DCDC\n"}, 
  {/* name */ "ctl_ret_ldo_en", /* range */ "[6:6]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enable retention LDO\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:7]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_timer0_ctrl[]  = {
  {/* name */ "ctl_aon_timer0_en", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_aon_timer0_clk_en", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_aon_timer0_reload", /* range */ "[2:2]", /* default */ "0x0", /* access */ "read-write", /* description */ "A write with 1 will reload (old value doesn't matter)\n"}, 
  {/* name */ "ctl_aon_timer0_irq_clr", /* range */ "[4:4]", /* default */ "0x0", /* access */ "read-write", /* description */ "A write with 1 will clear the IRQ (old value doesn't matter)\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:5]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_timer0_init_val[]  = {
  {/* name */ "ctl_aon_timer0_init_val", /* range */ "[31:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_timer1_ctrl[]  = {
  {/* name */ "ctl_aon_timer1_en", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_aon_timer1_clk_en", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_aon_timer1_reload", /* range */ "[2:2]", /* default */ "0x0", /* access */ "read-write", /* description */ "A write with 1 will reload (old value doesn't matter)\n"}, 
  {/* name */ "ctl_aon_timer1_irq_clr", /* range */ "[4:4]", /* default */ "0x0", /* access */ "read-write", /* description */ "A write with 1 will clear the IRQ (old value doesn't matter)\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:5]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_timer1_init_val[]  = {
  {/* name */ "ctl_aon_timer1_init_val", /* range */ "[31:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_timer_wake_up_sel[]  = {
  {/* name */ "ctl_aon_timer_wakeup_en", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_aon_timer_wakeup_sel", /* range */ "[5:4]", /* default */ "0x0", /* access */ "read-write", /* description */ "0 - timer 0, 1 - timer 1, others - either timer\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:6]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__doopd_reg1_mux_control[]  = {
  {/* name */ "ctl_trig_to_ctrl_dcdc_during_trx_only", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_trig_to_ctrl_dcdc", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "dummy_field", /* range */ "[7:2]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_wakeup_mask[]  = {
  {/* name */ "ctl_gpio_wakup_mask", /* range */ "[22:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "[ 5: 0] -> GPIO_0 [5:0]\n\n[14: 6] -> GPIO_1 [8:0]\n\n[20:15] -> GPIO_3 [5:0]\n\n[22:21] -> GPIO_4 [1:0]\n\n\n"}, 
  {/* name */ "dummy_field", /* range */ "[23:23]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_wakeup_polarity[]  = {
  {/* name */ "ctl_gpio_wakup_polarity", /* range */ "[22:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "[ 5: 0] -> GPIO_0 [5:0]\n\n[14: 6] -> GPIO_1 [8:0]\n\n[20:15] -> GPIO_3 [5:0]\n\n[22:21] -> GPIO_4 [1:0]\n\n\n"}, 
  {/* name */ "dummy_field", /* range */ "[23:23]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__ms_gpio_wakeup_mask[]  = {
  {/* name */ "ctl_ms_gpio_wakup_mask", /* range */ "[8:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_bod_wakeup_mask", /* range */ "[12:12]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "dummy_field", /* range */ "[15:13]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__ms_gpio_wakeup_polarity[]  = {
  {/* name */ "ctl_ms_gpio_wakup_polarity", /* range */ "[8:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "ctl_bod_wakeup_polarity", /* range */ "[12:12]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "dummy_field", /* range */ "[15:13]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__cpu_stack_pointer[]  = {
  {/* name */ "value", /* range */ "[31:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__cpu_program_counter_cold_boot[]  = {
  {/* name */ "value", /* range */ "[30:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "cold_boot", /* range */ "[31:31]", /* default */ "0x0", /* access */ "read-write", /* description */ "0 - cold boot, 1 - sleep/wake up. CPU need to program this bit.\n"}
};
field_const_t field_const_aon_reg__spare_ctrl_reg0[]  = {
  {/* name */ "value", /* range */ "[31:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__spare_ctrl_reg1[]  = {
  {/* name */ "value", /* range */ "[31:0]", /* default */ "0x0", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_0_le_maskb[]  = {
  {/* name */ "ctl_gpio_0_le", /* range */ "[5:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "latch enable\n"}, 
  {/* name */ "ctl_gpio_0_maskb", /* range */ "[21:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "DI mask\n"}, 
  {/* name */ "dummy_field", /* range */ "[23:22]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_1_le_maskb[]  = {
  {/* name */ "ctl_gpio_1_le", /* range */ "[8:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "latch enable\n"}, 
  {/* name */ "ctl_gpio_1_maskb", /* range */ "[24:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "DI mask\n"}, 
  {/* name */ "dummy_field", /* range */ "[31:25]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_2_le_maskb[]  = {
  {/* name */ "ctl_gpio_2_le", /* range */ "[8:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "latch enable\n"}, 
  {/* name */ "ctl_gpio_2_maskb", /* range */ "[24:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "DI mask\n"}, 
  {/* name */ "dummy_field", /* range */ "[31:25]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_3_le_maskb[]  = {
  {/* name */ "ctl_gpio_3_le", /* range */ "[5:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "latch enable\n"}, 
  {/* name */ "ctl_gpio_3_maskb", /* range */ "[21:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "DI mask\n"}, 
  {/* name */ "dummy_field", /* range */ "[23:22]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_4_le_maskb[]  = {
  {/* name */ "ctl_gpio_4_le", /* range */ "[1:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "latch enable\n"}, 
  {/* name */ "ctl_gpio_4_maskb", /* range */ "[17:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "DI mask\n"}, 
  {/* name */ "ctl_test_mode_le", /* range */ "[24:24]", /* default */ "0x0", /* access */ "read-write", /* description */ "latch enable for test mode\n"}, 
  {/* name */ "dummy_field", /* range */ "[31:25]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_01_aon_sel[]  = {
  {/* name */ "ctl_gpio_0_aon_sel", /* range */ "[5:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "AON dout sel\n"}, 
  {/* name */ "ctl_gpio_1_aon_sel", /* range */ "[24:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "DI mask\n"}, 
  {/* name */ "dummy_field", /* range */ "[31:25]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_34_aon_sel[]  = {
  {/* name */ "ctl_gpio_3_aon_sel", /* range */ "[5:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "AON dout sel\n"}, 
  {/* name */ "ctl_gpio_4_aon_sel", /* range */ "[13:12]", /* default */ "0x0", /* access */ "read-write", /* description */ "DI mask\n"}, 
  {/* name */ "dummy_field", /* range */ "[15:14]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__gpio_2_ana_on[]  = {
  {/* name */ "ctl_gpio_2_ana_on", /* range */ "[8:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "GPIO 2 analog on\n"}, 
  {/* name */ "dummy_field", /* range */ "[15:9]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__qspi_aon_sel[]  = {
  {/* name */ "ctl_qspi_aon_sel", /* range */ "[6:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "AON dout sel\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:7]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__qspi_le_maskb[]  = {
  {/* name */ "ctl_qspi_le", /* range */ "[6:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "latch enable\n"}, 
  {/* name */ "ctl_qspi_maskb", /* range */ "[22:16]", /* default */ "0x0", /* access */ "read-write", /* description */ "DI mask\n"}, 
  {/* name */ "dummy_field", /* range */ "[23:23]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__xo_reg_resetn[]  = {
  {/* name */ "reg1", /* range */ "[7:0]", /* default */ "0x33", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg2", /* range */ "[15:8]", /* default */ "0x1f", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg3", /* range */ "[23:16]", /* default */ "0x25", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg4", /* range */ "[31:24]", /* default */ "0x22", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__xo_reg5_resetn[]  = {
  {/* name */ "reg5", /* range */ "[7:0]", /* default */ "0x8", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__xo_reg[]  = {
  {/* name */ "reg1", /* range */ "[7:0]", /* default */ "0x33", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg2", /* range */ "[15:8]", /* default */ "0x1f", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg3", /* range */ "[23:16]", /* default */ "0x25", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "reg4", /* range */ "[31:24]", /* default */ "0x22", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__xo_reg5[]  = {
  {/* name */ "reg5", /* range */ "[7:0]", /* default */ "0x8", /* access */ "read-write", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_misc_ctrl[]  = {
  {/* name */ "use_aon_ps_vals_for_xo_reg3_bits", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "If set, AON PS controls the auto_amp_ctrl bits of xo_reg3\n"}, 
  {/* name */ "aon_misc_ctrl_sel_aon_32k_clk", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ "Clock mux for D2 Clock domain\n\n0     => 32KHz RC \n\n1     => 32KHz RTC\n\n"}, 
  {/* name */ "ctl_ble_ext_wakeup_enable", /* range */ "[4:4]", /* default */ "0x1", /* access */ "read-write", /* description */ "If set 0, disable external wake up signal to BLE timing LP block\n\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:5]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_reset_ctrl[]  = {
  {/* name */ "aon_reset_ctrl_aon_mux_clk_rstn_reg", /* range */ "[0:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "Resets aon 32k clock logic\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:1]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_global_reset_ctrl[]  = {
  {/* name */ "aon_global_reset_ctrl_global_resetn_reg", /* range */ "[0:0]", /* default */ "0x1", /* access */ "read-write", /* description */ ""}, 
  {/* name */ "dummy_field", /* range */ "[7:1]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__aon_clk_ctrl[]  = {
  {/* name */ "ctl_clk_en_aon_timer0", /* range */ "[0:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enable AON timer 0 clock\n"}, 
  {/* name */ "ctl_clk_en_aon_timer1", /* range */ "[1:1]", /* default */ "0x1", /* access */ "read-write", /* description */ "Enable AON timer 1 clock\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:2]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__sensor_flash_power_sw_ctl[]  = {
  {/* name */ "ctl_sensor_power_sw_force", /* range */ "[0:0]", /* default */ "0x0", /* access */ "read-write", /* description */ "Force to use register control sensor power switch\n"}, 
  {/* name */ "ctl_sensor_power_sw", /* range */ "[1:1]", /* default */ "0x0", /* access */ "read-write", /* description */ "sensor power switch: 1 - on, 0 - off\n"}, 
  {/* name */ "ctl_flash_power_sw_force", /* range */ "[4:4]", /* default */ "0x0", /* access */ "read-write", /* description */ "Force to use register control flash power switch\n"}, 
  {/* name */ "ctl_flash_power_sw", /* range */ "[5:5]", /* default */ "0x0", /* access */ "read-write", /* description */ "flash power switch: 1 - on, 0 - off\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:6]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};
field_const_t field_const_aon_reg__pd12_isolation_control[]  = {
  {/* name */ "ctl_iso_en_pd1_to_pd2", /* range */ "[0:0]", /* default */ "0x1", /* access */ "read-write", /* description */ "Isolation enable from PD1 to PD2\n"}, 
  {/* name */ "ctl_iso_en_pd2_to_pd1", /* range */ "[1:1]", /* default */ "0x1", /* access */ "read-write", /* description */ "Isolation enable from PD2 to PD1\n"}, 
  {/* name */ "dummy_field", /* range */ "[7:2]", /* default */ "0x0", /* access */ "no-access", /* description */ ""}
};

field_const_array_t reg_pnt_list__aon_reg[NUM_REGS__AON_REG] = {
  { /* pfield */ field_const_aon_reg__pmu_aonpd_reg_1to4, /* size */ 4}, 
  { /* pfield */ field_const_aon_reg__pmu_aonpd_reg_1to4_lv, /* size */ 4}, 
  { /* pfield */ field_const_aon_reg__pmu_aonpd_reg_5to6, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__pmu_doopd_reg_1to4, /* size */ 4}, 
  { /* pfield */ field_const_aon_reg__pmu_doopd_reg_567, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__pmu_test_mux_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__pmu_misc_ctrl, /* size */ 6}, 
  { /* pfield */ field_const_aon_reg__aon_timer0_ctrl, /* size */ 5}, 
  { /* pfield */ field_const_aon_reg__aon_timer0_init_val, /* size */ 1}, 
  { /* pfield */ field_const_aon_reg__aon_timer1_ctrl, /* size */ 5}, 
  { /* pfield */ field_const_aon_reg__aon_timer1_init_val, /* size */ 1}, 
  { /* pfield */ field_const_aon_reg__aon_timer_wake_up_sel, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__doopd_reg1_mux_control, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__gpio_wakeup_mask, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__gpio_wakeup_polarity, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__ms_gpio_wakeup_mask, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__ms_gpio_wakeup_polarity, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__cpu_stack_pointer, /* size */ 1}, 
  { /* pfield */ field_const_aon_reg__cpu_program_counter_cold_boot, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__spare_ctrl_reg0, /* size */ 1}, 
  { /* pfield */ field_const_aon_reg__spare_ctrl_reg1, /* size */ 1}, 
  { /* pfield */ field_const_aon_reg__gpio_0_le_maskb, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__gpio_1_le_maskb, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__gpio_2_le_maskb, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__gpio_3_le_maskb, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__gpio_4_le_maskb, /* size */ 4}, 
  { /* pfield */ field_const_aon_reg__gpio_01_aon_sel, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__gpio_34_aon_sel, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__gpio_2_ana_on, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__qspi_aon_sel, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__qspi_le_maskb, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__xo_reg_resetn, /* size */ 4}, 
  { /* pfield */ field_const_aon_reg__xo_reg5_resetn, /* size */ 1}, 
  { /* pfield */ field_const_aon_reg__xo_reg, /* size */ 4}, 
  { /* pfield */ field_const_aon_reg__xo_reg5, /* size */ 1}, 
  { /* pfield */ field_const_aon_reg__aon_misc_ctrl, /* size */ 4}, 
  { /* pfield */ field_const_aon_reg__aon_reset_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__aon_global_reset_ctrl, /* size */ 2}, 
  { /* pfield */ field_const_aon_reg__aon_clk_ctrl, /* size */ 3}, 
  { /* pfield */ field_const_aon_reg__sensor_flash_power_sw_ctl, /* size */ 5}, 
  { /* pfield */ field_const_aon_reg__pd12_isolation_control, /* size */ 3}
};
